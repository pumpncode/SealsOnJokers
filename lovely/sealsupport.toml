[manifest]
version = "1.0.0"
dump_lua = true
priority = 1

[[patches]]
[patches.pattern]
target = "card_character.lua"
pattern = 'self.children.card.states.visible = false'
position = "before"
payload = "self.children.card:set_seal('Red')"
match_indent = true

[[patches]]
[patches.pattern]
target = "game.lua"
pattern = 'Jimbo:say_stuff(5)'
position = "after"
payload = """
G.E_MANAGER:add_event(Event({
    trigger = 'after',
    delay = 1,
    blocking = false,
    func = (function()
        if G.OVERLAY_MENU and G.OVERLAY_MENU:get_UIE_by_ID('jimbo_spot') then 
            Jimbo.ui_object_updated = true
            Jimbo:add_speech_bubble('again', nil, {quip = true})
            Jimbo:say_stuff(2)
        end
        return true
    end)
}))
G.E_MANAGER:add_event(Event({
    trigger = 'after',
    delay = 1.5,
    blocking = false,
    func = (function()
        if G.OVERLAY_MENU and G.OVERLAY_MENU:get_UIE_by_ID('jimbo_spot') then 
            Jimbo.ui_object_updated = true
            Jimbo:add_speech_bubble('lq_'..math.random(1,10), nil, {quip = true})
            Jimbo:say_stuff(5)
        end
        return true
    end)
}))
"""
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = 'Jimbo:say_stuff(5)'
position = "after"
payload = """
G.E_MANAGER:add_event(Event({
    trigger = 'after',
    delay = 1,
    blocking = false,
    func = (function()
        if G.OVERLAY_MENU and G.OVERLAY_MENU:get_UIE_by_ID('jimbo_spot') then 
            Jimbo.ui_object_updated = true
            Jimbo:add_speech_bubble('again', nil, {quip = true})
            Jimbo:say_stuff(2)
        end
        return true
    end)
}))
G.E_MANAGER:add_event(Event({
    trigger = 'after',
    delay = 1.5,
    blocking = false,
    func = (function()
        if G.OVERLAY_MENU and G.OVERLAY_MENU:get_UIE_by_ID('jimbo_spot') then 
            Jimbo.ui_object_updated = true
            Jimbo:add_speech_bubble('wq_'..math.random(1,7), nil, {quip = true})
            Jimbo:say_stuff(5)
        end
        return true
    end)
}))
"""
match_indent = true

# Show a Seal Seal because why not
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "replace_card.states.visible = false"
position = "before"
payload = "replace_card:set_seal('soe_sealseal', true, true)"
match_indent = true
overwrite = false

[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = '''
-- TARGET: calc_dollar_bonus per card
if ret then
    i = i+1
    add_round_eval_row({dollars = ret, bonus = true, name='joker'..i, pitch = pitch, card = _card})
    pitch = pitch + 0.06
    dollars = dollars + ret
end
'''
position = "after"
payload = '''
if ret and _card.seal == "Red" and _card.redsealcount then
    for i = 1, _card.redsealcount do
        SMODS.calculate_effect({message = localize('k_again_ex'), card = _card}, _card)
        i = i+1
        add_round_eval_row({dollars = ret, bonus = true, name='joker'..i, pitch = pitch, card = _card})
        pitch = pitch + 0.06
        dollars = dollars + ret
    end
end
if ret and _card.seal == "Gold" then
    SMODS.calculate_effect({dollars = 3, card = _card}, _card)
end
'''
match_indent = true